import { useParams } from "react-router-dom";
import { Container, Typography, Box, Divider } from "@mui/material";
import { useState } from "react";
import { categoryData } from "../../data/mockData";
import { InfoCard } from "../../components/InfoCard/InfoCard";
import { categories } from "../../data/categories";
import { SearchBar } from "../../components/SearchBar/SearchBar";

export const CategoryPage = () => {
  const { id } = useParams<{ id: string }>();
  const data = categoryData[id || ""] || [];

  const category = categories.find((cat) => cat.id === id);
  const Icon = category?.icon;

  const [searchTerm, setSearchTerm] = useState("");

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—à—É–∫—É –º–∞—Ä—à—Ä—É—Ç—ñ–≤ (–¥–ª—è id === 'transport')
  const findTransportMatches = () => {
    const lowerSearch = searchTerm.toLowerCase().trim();
    if (!lowerSearch) return [];

    const searchWords = lowerSearch.split(/\s+/);

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏, –¥–µ –≤—Å—ñ —Å–ª–æ–≤–∞ —î –∞–±–æ –≤ –Ω–∞–∑–≤—ñ –º–∞—Ä—à—Ä—É—Ç—É, –∞–±–æ –≤ –∑—É–ø–∏–Ω–∫–∞—Ö
    return data.filter((item) =>
      searchWords.every(
        (word) =>
          item.title.toLowerCase().includes(word) ||
          item.stops?.some((stop) => stop.name.toLowerCase().includes(word))
      )
    );
  };

  // –î–ª—è –ø–æ–∫–∞–∑—É —ñ–Ω—Ñ–æ –ø—Ä–æ –∑—É–ø–∏–Ω–∫—É (—è–∫—â–æ –≤–≤–µ–¥–µ–Ω–æ –∫—ñ–ª—å–∫–∞ —Å–ª—ñ–≤)
  const renderStopInfo = () => {
    if (id !== "transport") return null;

    const lowerSearch = searchTerm.toLowerCase().trim();
    if (!lowerSearch) return null;

    const searchWords = lowerSearch.split(/\s+/);

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π –º–∞—Ä—à—Ä—É—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å –≤—Å—ñ —Å–ª–æ–≤–∞
    const match = data.find((item) =>
      searchWords.every(
        (word) =>
          item.title.toLowerCase().includes(word) ||
          item.stops?.some((stop) => stop.name.toLowerCase().includes(word))
      )
    );

    if (!match) return null;

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∑—É–ø–∏–Ω–∫—É, —è–∫–∞ –º—ñ—Å—Ç–∏—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω–µ –∑—ñ —Å–ª—ñ–≤ –ø–æ—à—É–∫—É
    const matchedStop = match.stops?.find((stop) =>
      searchWords.some((word) => stop.name.toLowerCase().includes(word))
    );

    if (matchedStop) {
      return (
        <Box mb={2}>
          <Typography variant="body1" color="primary">
            üöå {match.title}: –ê–≤—Ç–æ–±—É—Å –±—É–¥–µ –Ω–∞ –∑—É–ø–∏–Ω—Ü—ñ "{matchedStop.name}" –æ{" "}
            {matchedStop.time}
          </Typography>
        </Box>
      );
    } else {
      return (
        <Box mb={2}>
          <Typography variant="body2" color="text.secondary">
            –ó—É–ø–∏–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É {match.title}
          </Typography>
        </Box>
      );
    }
  };

  // –í–∏–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä—É:
  // –Ø–∫—â–æ transport - —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –Ω–æ–≤–æ—é –ª–æ–≥—ñ–∫–æ—é, —ñ–Ω–∞–∫—à–µ –∑–≤–∏—á–∞–π–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –ø–æ title, subtitle, phone
  const filteredData =
    id === "transport" && searchTerm.trim() !== ""
      ? findTransportMatches()
      : data.filter((item) =>
          `${item.title} ${item.subtitle ?? ""} ${item.phone ?? ""}`
            .toLowerCase()
            .includes(searchTerm.toLowerCase())
        );

  return (
    <Container sx={{ mt: 4 }}>
      <Box display="flex" alignItems="center" gap={2} mb={2}>
        {Icon && <Icon fontSize="large" color="primary" />}
        <Typography variant="h4" component="h1">
          {category?.title || id?.toUpperCase()}
        </Typography>
      </Box>

      <Divider sx={{ mb: 2 }} />

      <SearchBar
        value={searchTerm}
        onChange={setSearchTerm}
        placeholder="–ü–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤, –∞–¥—Ä–µ—Å–∏ –∞–±–æ –Ω–æ–º–µ—Ä—É..."
      />

      {renderStopInfo()}

      {searchTerm.trim() !== "" && filteredData.length === 0 ? (
        <Typography variant="body1" color="text.secondary">
          –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.
        </Typography>
      ) : (
        filteredData.map((item, index) => (
          <InfoCard
            key={index}
            title={item.title}
            subtitle={item.subtitle}
            phone={item.phone}
            mapUrl={item.mapUrl}
            schedule={item.schedule}
          />
        ))
      )}
    </Container>
  );
};
